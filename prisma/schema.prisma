// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["referentialIntegrity"]
}

datasource db {
  provider             = "mysql"
  url                  = env("DATABASE_URL")
  referentialIntegrity = "prisma"
}

model Account {
  id                       String  @id @default(cuid())
  userId                   String
  type                     String
  provider                 String
  providerAccountId        String
  refresh_token            String? @db.Text
  refresh_token_expires_in Int?
  access_token             String? @db.Text
  expires_at               Int?
  token_type               String?
  scope                    String?
  id_token                 String? @db.Text
  session_state            String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  psssword      String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

// model User {
//   id        Int       @id @default(autoincrement())
//   name      String?
//   email     String    @unique
//   password  String
//   createdAt DateTime  @default(now())
//   updatedAt DateTime  @updatedAt
//   products  Product[]
//   boards    Board[]
//   Chat      Chat[]
// }

// model Product {
//   id          Int      @id @default(autoincrement())
//   image       String
//   title       String
//   description String?
//   createdAt   DateTime @default(now())
//   updatedAt   DateTime @updatedAt
//   user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
//   userId      Int
//   chats       Chat[]
// }

// model Board {
//   id          Int      @id @default(autoincrement())
//   title       String
//   description String
//   createdAt   DateTime @default(now())
//   updatedAt   DateTime @updatedAt
//   user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
//   userId      Int
// }

// model Chat {
//   id          Int      @id @default(autoincrement())
//   description String
//   createdAt   DateTime @default(now())
//   updatedAt   DateTime @updatedAt
//   product     Product  @relation(fields: [productId], references: [id], onDelete: Cascade)
//   productId   Int
//   user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
//   userId      Int
// }
